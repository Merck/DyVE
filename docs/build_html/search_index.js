var documenterSearchIndex = {"docs":
[{"location":"#DyVE-Interface-Documentation","page":"DyVE Interface Documentation","title":"DyVE Interface Documentation","text":"","category":"section"},{"location":"#Flowchart","page":"DyVE Interface Documentation","title":"Flowchart","text":"","category":"section"},{"location":"","page":"DyVE Interface Documentation","title":"DyVE Interface Documentation","text":"(Image: )","category":"page"},{"location":"#DyVE-Interface-Documentation-2","page":"DyVE Interface Documentation","title":"DyVE Interface Documentation","text":"","category":"section"},{"location":"","page":"DyVE Interface Documentation","title":"DyVE Interface Documentation","text":"Modules = [DyVE]\nOrder = [:macro]","category":"page"},{"location":"#DyVE.@ReactionNetwork","page":"DyVE Interface Documentation","title":"DyVE.@ReactionNetwork","text":"Macro that takes an expression corresponding to a reaction network and outputs an instance of TheoryReactionNetwork that can be converted to a DEProblem or solved directly.\n\nMost arrows accepted (both right, left, and bi-drectional arrows). Use 0 or ∅ for annihilation/creation to/from nothing.\n\nCustom functions and sampleable objects can be used as numeric parameters. Note that these have to be accessible from DyVE's source code.\n\nExamples\n\nacs = @ReactionNetwork begin\n    1.0, X ⟶ Y\n    1.0, X ⟶ Y, priority=>6., prob=>.7, capacity=>3.\n    1.0, ∅ --> (Poisson(.3γ)X, Poisson(.5)Y)\n    (XY > 100) && (XY -= 1)\nend\n@push acs 1.0 X ⟶ Y \n@prob_init acs X=1 Y=2 XY=α\n@prob_params acs γ=1 α=4\n@solve_and_plot acs\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@add_species-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@add_species","text":"Add new species to a model.\n\nExamples\n\n@add_species acs S I R\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@aka-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@aka","text":"Alias object name in an acs.\n\nFollowed with an ACSname, transition=transitionalias species=species_alias.\n\nDefault names\n\nname short name\nspecies S\ntransition T\naction A\nevent E\nparam P\nmeta M\n\nExamples\n\n@aka acs species=resource transition=reaction\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@cost-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@cost","text":"Set cost.\n\nExamples\n\n@cost model experimental1=2 experimental2=3\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@equalize-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@equalize","text":"Identify (collapse) a set of species in a model.\n\nExamples\n\n@join acs acs1.A=acs2.A B=C\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@export_as_table","page":"DyVE Interface Documentation","title":"DyVE.@export_as_table","text":"@export_as_table sol\n\nExport a solution as a DataFrame.\n\nExamples\n\n@export_as_table sol\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@export_csv","page":"DyVE Interface Documentation","title":"DyVE.@export_csv","text":"@export_csv sol\n@export_csv sol \"sol.csv\"\n\nExport a solution to a file.\n\nExamples\n\n@export_csv sol \"sol.csv\"\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@export_model-Tuple{Any, Any}","page":"DyVE Interface Documentation","title":"DyVE.@export_model","text":"Export model to a file.\n\nExamples\n\n@export_model acs \"acs_data.toml\"\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@export_solution","page":"DyVE Interface Documentation","title":"DyVE.@export_solution","text":"@export sol\n@export sol \"sol.jld2\"\n\nExport a solution to a file.\n\nExamples\n\n@export_solution sol \"sol.jdl2\"\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@fit-Tuple{Any, Any, Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@fit","text":"@fit acset data_points time_steps empiric_variables <free_var=[init_val]>... <free_prm=[init_val]>... opts...\n\nTake an acset and fit initial values and parameters to empirical data.\n\nThe values to optimized are listed using their symbolic names; unless specified, the initial value is inferred from the model. The vector of free variables passed to the NLopt solver has the form [free_vars; free_params]; order of vars and params, respectively, is preserved. \n\nPropagates NLopt solver arguments; see NLopt documentation.\n\nExamples\n\nt = [1, 50, 100]\ndata = [80 30 20]\n@fit acs data t vars=A B=20 A α # fit B, A, α; empirical data is for variable A\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@fit_and_plot-Tuple{Any, Any, Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@fit_and_plot","text":"@fit acset data_points time_steps empiric_variables <free_var=[init_val]>... <free_prm=[init_val]>... opts...\n\nTake an acset, fit initial values and parameters to empirical data, and plot the result.\n\nThe values to optimized are listed using their symbolic names; unless specified, the initial value is inferred from the model. The vector of free variables passed to the NLopt solver has the form [free_vars; free_params]; order of vars and params, respectively, is preserved. \n\nPropagates NLopt solver arguments; see NLopt documentation.\n\nExamples\n\nt = [1, 50, 100]\ndata = [80 30 20]\n@fit acs data t vars=A B=20 A α # fit B, A, α; empirical data is for variable A\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@import_model","page":"DyVE Interface Documentation","title":"DyVE.@import_model","text":"Import a model from a file.\n\nExamples\n\n@import_model \"model.toml\"\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@import_solution","page":"DyVE Interface Documentation","title":"DyVE.@import_solution","text":"@import \"sol.jld2\"\n@import \"sol.jld2\" sol\n\nImport a solution from a file.\n\nExamples\n\n@import_solution \"sir_acs_sol/serialized/sol.jld2\"\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@join-Tuple","page":"DyVE Interface Documentation","title":"DyVE.@join","text":"Performs join of models and identifies model variables, as specified.\n\nModel variables / parameter values and metadata are propagated; the last model takes precedence.\n\nExamples\n\n@join acs1 acs2 @catchall(A)=acs2.Z @catchall(XY) @catchall(B)\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@jump-Tuple{Any, Any, Any}","page":"DyVE Interface Documentation","title":"DyVE.@jump","text":"Add a jump process (with specified Poisson intensity per unit time step) to a model.\n\nFollowed with ACSname Poissonrate (conditiuon1 && condition2 && … && (action1; action2; …)).\n\nExamples\n\n@jump acs λ Z += rand(Poisson(1.))\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@mode-Tuple{Any, Any, Any}","page":"DyVE Interface Documentation","title":"DyVE.@mode","text":"Set species modality.\n\nSupported modalities\n\nnonblock\nconserved\nrate\n\nExamples\n\n@mode acs (r\"proj\\w+\", r\"experimental\\w+\") conserved @mode acs (S, I) conserved @mode acs S conserved\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@name_transition-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@name_transition","text":"Set name of a transition in the model.\n\nExamples\n\n@nametransition acs 1=\"name\" @nametransition acs name=\"transitionname\" @nametransition acs \"name\"=\"transition_name\"\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@optimize-Tuple{Any, Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@optimize","text":"@optimize acset objective <free_var=[init_val]>... <free_prm=[init_val]>... opts...\n\nTake an acset and optimize given functional.\n\nObjective is an expression which may reference the model's variables and parameters, i.e., A+β. The values to optimized are listed using their symbolic names; unless specified, the initial value is inferred from the model. The vector of free variables passed to the NLopt solver has the form [free_vars; free_params]; order of vars and params, respectively, is preserved. \n\nBy default, the functional is minimized. Specify objective=max to perform maximization. \n\nPropagates NLopt solver arguments; see NLopt documentation.\n\nExamples\n\n@optimize acs abs(A-B) A B=20. α=2. lower_bounds=0 upper_bounds=100\n@optimize acss abs(A-B) A B=20. α=2. upper_bounds=[200,300,400] maxeval=200 objective=min\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@periodic-Tuple{Any, Any, Any}","page":"DyVE Interface Documentation","title":"DyVE.@periodic","text":"Add a periodic callback to a model.\n\nExamples\n\n@periodic acs 1. X += 1\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@plot-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@plot","text":"Plot the solution (summary).\n\nExamples\n\n@plot sol plottype=summary @plot sol plottype=allocation # not supported for ensemble solutions! @plot sol plottype=valuations # not supported for ensemble solutions! @plot sol plottype=new_transitions # not supported for ensemble solutions!\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@prob_check_verbose-Tuple{Any}","page":"DyVE Interface Documentation","title":"DyVE.@prob_check_verbose","text":"Check model parameters have been set.\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@prob_init-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@prob_init","text":"Set initial values of species in an acset.\n\nTwo different formats can be applied. Followed with ACSname initialvalues.\n\nExamples\n\n@prob_init acs X=1 Y=2 Z=h(α)\n@prob_init acs [1., 2., 3.]\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@prob_meta-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@prob_meta","text":"Set model metadata (i.e., solver arguments)\n\nFollowed with arguments, e.g. ACS_name tspan tstep.\n\nExamples\n\n@prob_meta acs tspan=(0, 100.) schedule=schedule_weighted!\n@prob_meta sir_acs tspan=250 tstep=1\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@prob_params-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@prob_params","text":"Set parameter values in an acset.\n\nFollowed with ACSname parametervalues.\n\nExamples\n\n@prob_params acs α=1. β=2.\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@prob_uncertainty-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@prob_uncertainty","text":"Set uncertainty in initial values of species in an acset (stderr).\n\nFollowed with ACSname standarderror.\n\nExamples\n\n@prob_uncertainty acs X=.1 Y=.2\n@prob_uncertainty acs [.1, .2,]\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@problematize-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@problematize","text":"Convert a model to a DiscreteProblem. If passed a problem instance, return the instance.\n\nExamples\n\n@problematize acs tspan=1:100\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@push-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@push","text":"Add reactions to an acset.\n\nExamples\n\n@push sir_acs β*S*I*tdecay(@time()) S+I --> 2I name=>SI2I\n@push sir_acs begin \n    ν*I, I --> R, name=>I2R\n    γ, R --> S, name=>R2S\nend\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@register-Tuple{Any}","page":"DyVE Interface Documentation","title":"DyVE.@register","text":"Evaluate expression in DyVE scope.\n\nExamples\n\n@register bool_cond(t) = (100 < t < 200) || (400 < t < 500)\n@register tdecay(t) = exp(-t/10^3)\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@reward-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@reward","text":"Set reward.\n\nExamples\n\n@reward model experimental1=2 experimental2=3\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@solve-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@solve","text":"Solve the problem. Solverargs passed at the calltime take precedence.\n\nExamples\n\n@solve prob @solve prob tspan=1:100 @solve prob tspan=100 trajectories=20\n\n\n\n\n\n","category":"macro"},{"location":"#DyVE.@valuation-Tuple{Any, Vararg{Any}}","page":"DyVE Interface Documentation","title":"DyVE.@valuation","text":"Set valuation.\n\nExamples\n\n@valuation model experimental1=2 experimental2=3\n\n\n\n\n\n","category":"macro"}]
}
